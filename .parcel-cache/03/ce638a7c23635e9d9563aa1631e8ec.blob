var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
_parcelHelpers.export(exports, "TextLinesReveal", function () {
  return TextLinesReveal;
});
var _splitType = require('split-type');
var _splitTypeDefault = _parcelHelpers.interopDefault(_splitType);
var _utils = require('./utils');
var _gsap = require('gsap');
class TextLinesReveal {
  constructor(animationElems) {
    this.DOM = {
      animationElems: Array.isArray(animationElems) ? animationElems : [animationElems]
    };
    // array of SplitType instances
    this.SplitTypeInstances = [];
    // array of all HTML .line
    this.lines = [];
    for (const el of this.DOM.animationElems) {
      const SplitTypeInstance = new _splitTypeDefault.default(el, {
        types: 'lines'
      });
      // wrap the lines (div with class .oh)
      // the inner child will be the one animating the transform
      _utils.wrapLines(SplitTypeInstance.lines, 'div', 'oh');
      this.lines.push(SplitTypeInstance.lines);
      // keep a reference to the SplitType instance
      this.SplitTypeInstances.push(SplitTypeInstance);
    }
    this.initEvents();
  }
  in() {
    // lines are visible
    this.isVisible = true;
    // animation
    _gsap.gsap.killTweensOf(this.lines);
    return _gsap.gsap.timeline({
      defaults: {
        duration: 1.2,
        ease: 'expo'
      }
    }).set(this.lines, {
      y: '150%',
      rotate: 15
    }).to(this.lines, {
      y: '0%',
      rotate: 0,
      stagger: 0.04
    });
  }
  out() {
    // lines are invisible
    this.isVisible = false;
    // animation
    _gsap.gsap.killTweensOf(this.lines);
    return _gsap.gsap.timeline({
      defaults: {
        duration: 0.7,
        ease: 'power2'
      }
    }).to(this.lines, {
      y: '-150%',
      rotate: -5,
      stagger: 0.02
    });
  }
  initEvents() {
    window.addEventListener('resize', () => {
      // empty the lines array
      this.lines = [];
      // re initialize the Split Text
      for (const instance of this.SplitTypeInstances) {
        // re-split text
        // https://github.com/lukePeavey/SplitType#instancesplitoptions-void
        instance.split();
        // need to wrap again the new lines elements (div with class .oh)
        _utils.wrapLines(instance.lines, 'div', 'oh');
        this.lines.push(instance.lines);
      }
      // hide the lines
      if (!this.isVisible) {
        _gsap.gsap.set(this.lines, {
          y: '-150%'
        });
      }
    });
  }
}
